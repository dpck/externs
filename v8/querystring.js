/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from types-v8/querystring.d.ts:
// Derived from: declare module "querystring"
/** @const */
var querystring = {};
/**
 * @record
 * @struct
 */
querystring.StringifyOptions = function() {};
/** @type {!Function} */
querystring.StringifyOptions.prototype.encodeURIComponent;
/**
 * @record
 * @struct
 */
querystring.ParseOptions = function() {};
/** @type {number} */
querystring.ParseOptions.prototype.maxKeys;
/** @type {!Function} */
querystring.ParseOptions.prototype.decodeURIComponent;
/**
 * @record
 * @struct
 */
querystring.ParsedUrlQuery = function() {};

/* TODO: IndexSignature: querystring */

/**
 * @template T
 * @param {querystring.T} obj
 * @param {string=} sep
 * @param {string=} eq
 * @param {!querystring.StringifyOptions=} options
 * @return {string}
 */
querystring.stringify = function(obj, sep, eq, options) {};

/**
 * @template T
 * @param {string} str
 * @param {string=} sep
 * @param {string=} eq
 * @param {!querystring.ParseOptions=} options
 * @return {!querystring.ParsedUrlQuery|querystring.T}
 */
querystring.parse = function(str, sep, eq, options) {};

/**
 * @param {string} str
 * @return {string}
 */
querystring.escape = function(str) {};

/**
 * @param {string} str
 * @return {string}
 */
querystring.unescape = function(str) {};

/** @type {querystring.parse} */
querystring.decode
/** @type {querystring.stringify} */
querystring.encode