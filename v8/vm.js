/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from types-v8/vm.d.ts:
// Derived from: declare module "vm"
/** @const */
var vm = {};
/**
 * @record
 * @struct
 */
vm.Context = function() {};
/**
 * @record
 * @struct
 */
vm.ScriptOptions = function() {};
/** @type {string} */
vm.ScriptOptions.prototype.filename;
/** @type {number} */
vm.ScriptOptions.prototype.lineOffset;
/** @type {number} */
vm.ScriptOptions.prototype.columnOffset;
/** @type {boolean} */
vm.ScriptOptions.prototype.displayErrors;
/** @type {number} */
vm.ScriptOptions.prototype.timeout;
/** @type {!Buffer} */
vm.ScriptOptions.prototype.cachedData;
/** @type {boolean} */
vm.ScriptOptions.prototype.produceCachedData;
/**
 * @record
 * @struct
 */
vm.RunningScriptOptions = function() {};
/** @type {string} */
vm.RunningScriptOptions.prototype.filename;
/** @type {number} */
vm.RunningScriptOptions.prototype.lineOffset;
/** @type {number} */
vm.RunningScriptOptions.prototype.columnOffset;
/** @type {boolean} */
vm.RunningScriptOptions.prototype.displayErrors;
/** @type {number} */
vm.RunningScriptOptions.prototype.timeout;

/**
 * @constructor
 * @struct
 * @param {string} code
 * @param {!vm.ScriptOptions=} options
 */
vm.Script = function(code, options) {};

/**
 * @param {!vm.Context} contextifiedSandbox
 * @param {!vm.RunningScriptOptions=} options
 * @return {?}
 */
vm.Script.prototype.runInContext = function(contextifiedSandbox, options) {};

/**
 * @param {!vm.Context=} sandbox
 * @param {!vm.RunningScriptOptions=} options
 * @return {?}
 */
vm.Script.prototype.runInNewContext = function(sandbox, options) {};

/**
 * @param {!vm.RunningScriptOptions=} options
 * @return {?}
 */
vm.Script.prototype.runInThisContext = function(options) {};

/**
 * @param {!vm.Context=} sandbox
 * @return {!vm.Context}
 */
vm.createContext = function(sandbox) {};

/**
 * @param {!vm.Context} sandbox
 * @return {boolean}
 */
vm.isContext = function(sandbox) {};

/**
 * @param {string} code
 * @param {!vm.Context} contextifiedSandbox
 * @param {(string|!vm.RunningScriptOptions)=} options
 * @return {?}
 */
vm.runInContext = function(code, contextifiedSandbox, options) {};

/**
 * @param {string} code
 * @return {?}
 */
vm.runInDebugContext = function(code) {};

/**
 * @param {string} code
 * @param {!vm.Context=} sandbox
 * @param {(string|!vm.RunningScriptOptions)=} options
 * @return {?}
 */
vm.runInNewContext = function(code, sandbox, options) {};

/**
 * @param {string} code
 * @param {(string|!vm.RunningScriptOptions)=} options
 * @return {?}
 */
vm.runInThisContext = function(code, options) {};
