/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from types-v8/os.d.ts:
// Derived from: declare module "os"
/** @const */
var os = {};
/**
 * @record
 * @struct
 */
os.CpuInfo = function() {};
/** @type {string} */
os.CpuInfo.prototype.model;
/** @type {number} */
os.CpuInfo.prototype.speed;
/** @type {{user: number, nice: number, sys: number, idle: number, irq: number}} */
os.CpuInfo.prototype.times;
/**
 * @record
 * @struct
 */
os.NetworkInterfaceBase = function() {};
/** @type {string} */
os.NetworkInterfaceBase.prototype.address;
/** @type {string} */
os.NetworkInterfaceBase.prototype.netmask;
/** @type {string} */
os.NetworkInterfaceBase.prototype.mac;
/** @type {boolean} */
os.NetworkInterfaceBase.prototype.internal;
/** @type {string} */
os.NetworkInterfaceBase.prototype.cidr;
/**
 * @extends {os.NetworkInterfaceBase}
 * @record
 * @struct
 */
os.NetworkInterfaceInfoIPv4 = function() {};
/** @type {string} */
os.NetworkInterfaceInfoIPv4.prototype.family;
/**
 * @extends {os.NetworkInterfaceBase}
 * @record
 * @struct
 */
os.NetworkInterfaceInfoIPv6 = function() {};
/** @type {string} */
os.NetworkInterfaceInfoIPv6.prototype.family;
/** @type {number} */
os.NetworkInterfaceInfoIPv6.prototype.scopeid;

/** @typedef {(!os.NetworkInterfaceInfoIPv4|!os.NetworkInterfaceInfoIPv6)} */
os.NetworkInterfaceInfo;

/**
 * @return {string}
 */
os.hostname = function() {};

/**
 * @return {!Array<number>}
 */
os.loadavg = function() {};

/**
 * @return {number}
 */
os.uptime = function() {};

/**
 * @return {number}
 */
os.freemem = function() {};

/**
 * @return {number}
 */
os.totalmem = function() {};

/**
 * @return {!Array<!os.CpuInfo>}
 */
os.cpus = function() {};

/**
 * @return {string}
 */
os.type = function() {};

/**
 * @return {string}
 */
os.release = function() {};

/**
 * @return {!Object<string,!Array<(!os.NetworkInterfaceInfoIPv4|!os.NetworkInterfaceInfoIPv6)>>}
 */
os.networkInterfaces = function() {};

/**
 * @return {string}
 */
os.homedir = function() {};

/**
 * @param {{encoding: string}=} options
 * @return {{username: string, uid: number, gid: number, shell: ?, homedir: string}}
 */
os.userInfo = function(options) {};
/** @type {{UV_UDP_REUSEADDR: number, signals: {SIGHUP: number, SIGINT: number, SIGQUIT: number, SIGILL: number, SIGTRAP: number, SIGABRT: number, SIGIOT: number, SIGBUS: number, SIGFPE: number, SIGKILL: number, SIGUSR1: number, SIGSEGV: number, SIGUSR2: number, SIGPIPE: number, SIGALRM: number, SIGTERM: number, SIGCHLD: number, SIGSTKFLT: number, SIGCONT: number, SIGSTOP: number, SIGTSTP: number, SIGTTIN: number, SIGTTOU: number, SIGURG: number, SIGXCPU: number, SIGXFSZ: number, SIGVTALRM: number, SIGPROF: number, SIGWINCH: number, SIGIO: number, SIGPOLL: number, SIGPWR: number, SIGSYS: number, SIGUNUSED: number}, errno: {E2BIG: number, EACCES: number, EADDRINUSE: number, EADDRNOTAVAIL: number, EAFNOSUPPORT: number, EAGAIN: number, EALREADY: number, EBADF: number, EBADMSG: number, EBUSY: number, ECANCELED: number, ECHILD: number, ECONNABORTED: number, ECONNREFUSED: number, ECONNRESET: number, EDEADLK: number, EDESTADDRREQ: number, EDOM: number, EDQUOT: number, EEXIST: number, EFAULT: number, EFBIG: number, EHOSTUNREACH: number, EIDRM: number, EILSEQ: number, EINPROGRESS: number, EINTR: number, EINVAL: number, EIO: number, EISCONN: number, EISDIR: number, ELOOP: number, EMFILE: number, EMLINK: number, EMSGSIZE: number, EMULTIHOP: number, ENAMETOOLONG: number, ENETDOWN: number, ENETRESET: number, ENETUNREACH: number, ENFILE: number, ENOBUFS: number, ENODATA: number, ENODEV: number, ENOENT: number, ENOEXEC: number, ENOLCK: number, ENOLINK: number, ENOMEM: number, ENOMSG: number, ENOPROTOOPT: number, ENOSPC: number, ENOSR: number, ENOSTR: number, ENOSYS: number, ENOTCONN: number, ENOTDIR: number, ENOTEMPTY: number, ENOTSOCK: number, ENOTSUP: number, ENOTTY: number, ENXIO: number, EOPNOTSUPP: number, EOVERFLOW: number, EPERM: number, EPIPE: number, EPROTO: number, EPROTONOSUPPORT: number, EPROTOTYPE: number, ERANGE: number, EROFS: number, ESPIPE: number, ESRCH: number, ESTALE: number, ETIME: number, ETIMEDOUT: number, ETXTBSY: number, EWOULDBLOCK: number, EXDEV: number}}} */
os.constants;

/**
 * @return {string}
 */
os.arch = function() {};

/**
 * @return {string}
 */
os.platform = function() {};

/**
 * @return {string}
 */
os.tmpdir = function() {};
/** @type {string} */
os.EOL;

/**
 * @return {string}
 */
os.endianness = function() {};
