/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from types-v8/dgram.d.ts:
// Derived from: declare module "dgram"
/** @const */
var dgram = {};
/**
 * @record
 * @struct
 */
dgram.RemoteInfo = function() {};
/** @type {string} */
dgram.RemoteInfo.prototype.address;
/** @type {string} */
dgram.RemoteInfo.prototype.family;
/** @type {number} */
dgram.RemoteInfo.prototype.port;
/**
 * @record
 * @struct
 */
dgram.AddressInfo = function() {};
/** @type {string} */
dgram.AddressInfo.prototype.address;
/** @type {string} */
dgram.AddressInfo.prototype.family;
/** @type {number} */
dgram.AddressInfo.prototype.port;
/**
 * @record
 * @struct
 */
dgram.BindOptions = function() {};
/** @type {number} */
dgram.BindOptions.prototype.port;
/** @type {string} */
dgram.BindOptions.prototype.address;
/** @type {boolean} */
dgram.BindOptions.prototype.exclusive;

/** @typedef {string} */
dgram.SocketType;
/**
 * @record
 * @struct
 */
dgram.SocketOptions = function() {};
/** @type {string} */
dgram.SocketOptions.prototype.type;
/** @type {boolean} */
dgram.SocketOptions.prototype.reuseAddr;
/** @type {number} */
dgram.SocketOptions.prototype.recvBufferSize;
/** @type {number} */
dgram.SocketOptions.prototype.sendBufferSize;
/** @type {function(string, !dns.LookupOneOptions, function(!NodeJS.ErrnoException, string, number): void): void} */
dgram.SocketOptions.prototype.lookup;

/**
 * @param {string|!dgram.SocketOptions} type_or_options
 * @param {function(!Buffer, !dgram.RemoteInfo): void=} callback
 * @return {!dgram.Socket}
 */
dgram.createSocket = function(type_or_options, callback) {};
/**
 * @extends {events.EventEmitter}
 * @constructor
 * @struct
 */
dgram.Socket = function() {};

/**
 * @param {(string|!Array<?>|!Buffer|!Uint8Array)|(string|!Buffer|!Uint8Array)} msg
 * @param {number} port_or_offset
 * @param {string|number=} address_or_length
 * @param {function(!Error, number): void|number=} callback_or_port
 * @param {string=} address
 * @param {function(!Error, number): void=} callback
 * @return {void}
 */
dgram.Socket.prototype.send = function(msg, port_or_offset, address_or_length, callback_or_port, address, callback) {};

/**
 * @param {number|function(): void|!dgram.BindOptions=} port_or_callback_or_options
 * @param {string|function(): void|!Function=} address_or_callback
 * @param {function(): void=} callback
 * @return {void}
 */
dgram.Socket.prototype.bind = function(port_or_callback_or_options, address_or_callback, callback) {};

/**
 * @param {function(): void=} callback
 * @return {void}
 */
dgram.Socket.prototype.close = function(callback) {};

/**
 * @return {!dgram.AddressInfo}
 */
dgram.Socket.prototype.address = function() {};

/**
 * @param {boolean} flag
 * @return {void}
 */
dgram.Socket.prototype.setBroadcast = function(flag) {};

/**
 * @param {number} ttl
 * @return {void}
 */
dgram.Socket.prototype.setTTL = function(ttl) {};

/**
 * @param {number} ttl
 * @return {void}
 */
dgram.Socket.prototype.setMulticastTTL = function(ttl) {};

/**
 * @param {string} multicastInterface
 * @return {void}
 */
dgram.Socket.prototype.setMulticastInterface = function(multicastInterface) {};

/**
 * @param {boolean} flag
 * @return {void}
 */
dgram.Socket.prototype.setMulticastLoopback = function(flag) {};

/**
 * @param {string} multicastAddress
 * @param {string=} multicastInterface
 * @return {void}
 */
dgram.Socket.prototype.addMembership = function(multicastAddress, multicastInterface) {};

/**
 * @param {string} multicastAddress
 * @param {string=} multicastInterface
 * @return {void}
 */
dgram.Socket.prototype.dropMembership = function(multicastAddress, multicastInterface) {};

/**
 * @template THIS
 * @this {THIS}
 * @return {THIS}
 */
dgram.Socket.prototype.ref = function() {};

/**
 * @template THIS
 * @this {THIS}
 * @return {THIS}
 */
dgram.Socket.prototype.unref = function() {};

/**
 * @param {number} size
 * @return {void}
 */
dgram.Socket.prototype.setRecvBufferSize = function(size) {};

/**
 * @param {number} size
 * @return {void}
 */
dgram.Socket.prototype.setSendBufferSize = function(size) {};

/**
 * @return {number}
 */
dgram.Socket.prototype.getRecvBufferSize = function() {};

/**
 * @return {number}
 */
dgram.Socket.prototype.getSendBufferSize = function() {};

/**
 * events.EventEmitter
 * 1. close
 * 2. error
 * 3. listening
 * 4. message
 * @template THIS
 * @this {THIS}
 * @param {string} event
 * @param {function(...?): void|function(): void|function(!Error): void|function(!Buffer, !dgram.AddressInfo): void} listener
 * @return {THIS}
 */
dgram.Socket.prototype.addListener = function(event, listener) {};

/**
 * @param {(string|symbol)|string} event
 * @param {...?|!Error|!Buffer} args_or_err_or_msg
 * @return {boolean}
 */
dgram.Socket.prototype.emit = function(event, args_or_err_or_msg) {};

/**
 * @template THIS
 * @this {THIS}
 * @param {string} event
 * @param {function(...?): void|function(): void|function(!Error): void|function(!Buffer, !dgram.AddressInfo): void} listener
 * @return {THIS}
 */
dgram.Socket.prototype.on = function(event, listener) {};

/**
 * @template THIS
 * @this {THIS}
 * @param {string} event
 * @param {function(...?): void|function(): void|function(!Error): void|function(!Buffer, !dgram.AddressInfo): void} listener
 * @return {THIS}
 */
dgram.Socket.prototype.once = function(event, listener) {};

/**
 * @template THIS
 * @this {THIS}
 * @param {string} event
 * @param {function(...?): void|function(): void|function(!Error): void|function(!Buffer, !dgram.AddressInfo): void} listener
 * @return {THIS}
 */
dgram.Socket.prototype.prependListener = function(event, listener) {};

/**
 * @template THIS
 * @this {THIS}
 * @param {string} event
 * @param {function(...?): void|function(): void|function(!Error): void|function(!Buffer, !dgram.AddressInfo): void} listener
 * @return {THIS}
 */
dgram.Socket.prototype.prependOnceListener = function(event, listener) {};
