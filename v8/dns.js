/**
 * @externs
 * @suppress {duplicate,checkTypes}
 */
// NOTE: generated by tsickle, do not edit.
// externs from types-v8/dns.d.ts:
// Derived from: declare module "dns"
/** @const */
var dns = {};
/** @type {number} */
dns.ADDRCONFIG;
/** @type {number} */
dns.V4MAPPED;
/**
 * @record
 * @struct
 */
dns.LookupOptions = function() {};
/** @type {number} */
dns.LookupOptions.prototype.family;
/** @type {number} */
dns.LookupOptions.prototype.hints;
/** @type {boolean} */
dns.LookupOptions.prototype.all;
/** @type {boolean} */
dns.LookupOptions.prototype.verbatim;
/**
 * @extends {dns.LookupOptions}
 * @record
 * @struct
 */
dns.LookupOneOptions = function() {};
/** @type {boolean} */
dns.LookupOneOptions.prototype.all;
/**
 * @extends {dns.LookupOptions}
 * @record
 * @struct
 */
dns.LookupAllOptions = function() {};
/** @type {boolean} */
dns.LookupAllOptions.prototype.all;
/**
 * @record
 * @struct
 */
dns.LookupAddress = function() {};
/** @type {string} */
dns.LookupAddress.prototype.address;
/** @type {number} */
dns.LookupAddress.prototype.family;

/**
 * @param {string} hostname
 * @param {number|!dns.LookupOneOptions|!dns.LookupAllOptions|!dns.LookupOptions|function(!NodeJS.ErrnoException, string, number): void} family_or_options_or_callback
 * @param {function(!NodeJS.ErrnoException, string, number): void|function(!NodeJS.ErrnoException, !Array<!dns.LookupAddress>): void|function(!NodeJS.ErrnoException, (string|!Array<!dns.LookupAddress>), number): void=} callback
 * @return {void}
 */
dns.lookup = function(hostname, family_or_options_or_callback, callback) {};

/**
 * @param {string} hostname
 * @param {!dns.LookupAllOptions|(number|!dns.LookupOneOptions)|(number|!dns.LookupOptions)=} options
 * @return {!Promise<{address: !Array<!dns.LookupAddress>}>|!Promise<{address: string, family: number}>|!Promise<{address: (string|!Array<!dns.LookupAddress>), family: number}>}
 */
dns.lookup.__promisify__ = function(hostname, options) {};

/**
 * @param {string} address
 * @param {number} port
 * @param {function(!NodeJS.ErrnoException, string, string): void} callback
 * @return {void}
 */
dns.lookupService = function(address, port, callback) {};

/**
 * @param {string} address
 * @param {number} port
 * @return {!Promise<{hostname: string, service: string}>}
 */
dns.lookupService.__promisify__ = function(address, port) {};
/**
 * @record
 * @struct
 */
dns.ResolveOptions = function() {};
/** @type {boolean} */
dns.ResolveOptions.prototype.ttl;
/**
 * @extends {dns.ResolveOptions}
 * @record
 * @struct
 */
dns.ResolveWithTtlOptions = function() {};
/** @type {boolean} */
dns.ResolveWithTtlOptions.prototype.ttl;
/**
 * @record
 * @struct
 */
dns.RecordWithTtl = function() {};
/** @type {string} */
dns.RecordWithTtl.prototype.address;
/** @type {number} */
dns.RecordWithTtl.prototype.ttl;
/**
 * @extends {dns.RecordWithTtl}
 * @record
 * @struct
 */
dns.AnyARecord = function() {};
/** @type {string} */
dns.AnyARecord.prototype.type;
/**
 * @extends {dns.RecordWithTtl}
 * @record
 * @struct
 */
dns.AnyAaaaRecord = function() {};
/** @type {string} */
dns.AnyAaaaRecord.prototype.type;
/**
 * @record
 * @struct
 */
dns.MxRecord = function() {};
/** @type {number} */
dns.MxRecord.prototype.priority;
/** @type {string} */
dns.MxRecord.prototype.exchange;
/**
 * @extends {dns.MxRecord}
 * @record
 * @struct
 */
dns.AnyMxRecord = function() {};
/** @type {string} */
dns.AnyMxRecord.prototype.type;
/**
 * @record
 * @struct
 */
dns.NaptrRecord = function() {};
/** @type {string} */
dns.NaptrRecord.prototype.flags;
/** @type {string} */
dns.NaptrRecord.prototype.service;
/** @type {string} */
dns.NaptrRecord.prototype.regexp;
/** @type {string} */
dns.NaptrRecord.prototype.replacement;
/** @type {number} */
dns.NaptrRecord.prototype.order;
/** @type {number} */
dns.NaptrRecord.prototype.preference;
/**
 * @extends {dns.NaptrRecord}
 * @record
 * @struct
 */
dns.AnyNaptrRecord = function() {};
/** @type {string} */
dns.AnyNaptrRecord.prototype.type;
/**
 * @record
 * @struct
 */
dns.SoaRecord = function() {};
/** @type {string} */
dns.SoaRecord.prototype.nsname;
/** @type {string} */
dns.SoaRecord.prototype.hostmaster;
/** @type {number} */
dns.SoaRecord.prototype.serial;
/** @type {number} */
dns.SoaRecord.prototype.refresh;
/** @type {number} */
dns.SoaRecord.prototype.retry;
/** @type {number} */
dns.SoaRecord.prototype.expire;
/** @type {number} */
dns.SoaRecord.prototype.minttl;
/**
 * @extends {dns.SoaRecord}
 * @record
 * @struct
 */
dns.AnySoaRecord = function() {};
/** @type {string} */
dns.AnySoaRecord.prototype.type;
/**
 * @record
 * @struct
 */
dns.SrvRecord = function() {};
/** @type {number} */
dns.SrvRecord.prototype.priority;
/** @type {number} */
dns.SrvRecord.prototype.weight;
/** @type {number} */
dns.SrvRecord.prototype.port;
/** @type {string} */
dns.SrvRecord.prototype.name;
/**
 * @extends {dns.SrvRecord}
 * @record
 * @struct
 */
dns.AnySrvRecord = function() {};
/** @type {string} */
dns.AnySrvRecord.prototype.type;
/**
 * @record
 * @struct
 */
dns.AnyTxtRecord = function() {};
/** @type {string} */
dns.AnyTxtRecord.prototype.type;
/** @type {!Array<string>} */
dns.AnyTxtRecord.prototype.entries;
/**
 * @record
 * @struct
 */
dns.AnyNsRecord = function() {};
/** @type {string} */
dns.AnyNsRecord.prototype.type;
/** @type {string} */
dns.AnyNsRecord.prototype.value;
/**
 * @record
 * @struct
 */
dns.AnyPtrRecord = function() {};
/** @type {string} */
dns.AnyPtrRecord.prototype.type;
/** @type {string} */
dns.AnyPtrRecord.prototype.value;
/**
 * @record
 * @struct
 */
dns.AnyCnameRecord = function() {};
/** @type {string} */
dns.AnyCnameRecord.prototype.type;
/** @type {string} */
dns.AnyCnameRecord.prototype.value;

/** @typedef {(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)} */
dns.AnyRecord;

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|string} callback_or_rrtype
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|function(!NodeJS.ErrnoException, !Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>): void|function(!NodeJS.ErrnoException, !Array<!dns.MxRecord>): void|function(!NodeJS.ErrnoException, !Array<!dns.NaptrRecord>): void|function(!NodeJS.ErrnoException, !dns.SoaRecord): void|function(!NodeJS.ErrnoException, !Array<!dns.SrvRecord>): void|function(!NodeJS.ErrnoException, !Array<!Array<string>>): void|function(!NodeJS.ErrnoException, (!Array<string>|!dns.SoaRecord|!Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>|!Array<!dns.MxRecord>|!Array<!dns.NaptrRecord>|!Array<!dns.SrvRecord>|!Array<!Array<string>>)): void=} callback
 * @return {void}
 */
dns.resolve = function(hostname, callback_or_rrtype, callback) {};

/**
 * @param {string} hostname
 * @param {string=} rrtype
 * @return {!Promise<!Array<string>>|!Promise<!Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>>|!Promise<!Array<!dns.MxRecord>>|!Promise<!Array<!dns.NaptrRecord>>|!Promise<!dns.SoaRecord>|!Promise<!Array<!dns.SrvRecord>>|!Promise<!Array<!Array<string>>>|!Promise<(!Array<string>|!dns.SoaRecord|!Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>|!Array<!dns.MxRecord>|!Array<!dns.NaptrRecord>|!Array<!dns.SrvRecord>|!Array<!Array<string>>)>}
 */
dns.resolve.__promisify__ = function(hostname, rrtype) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|!dns.ResolveWithTtlOptions|!dns.ResolveOptions} callback_or_options
 * @param {function(!NodeJS.ErrnoException, !Array<!dns.RecordWithTtl>): void|function(!NodeJS.ErrnoException, (!Array<string>|!Array<!dns.RecordWithTtl>)): void=} callback
 * @return {void}
 */
dns.resolve4 = function(hostname, callback_or_options, callback) {};

/**
 * @param {string} hostname
 * @param {!dns.ResolveWithTtlOptions|!dns.ResolveOptions=} options
 * @return {!Promise<!Array<string>>|!Promise<!Array<!dns.RecordWithTtl>>|!Promise<(!Array<string>|!Array<!dns.RecordWithTtl>)>}
 */
dns.resolve4.__promisify__ = function(hostname, options) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void|!dns.ResolveWithTtlOptions|!dns.ResolveOptions} callback_or_options
 * @param {function(!NodeJS.ErrnoException, !Array<!dns.RecordWithTtl>): void|function(!NodeJS.ErrnoException, (!Array<string>|!Array<!dns.RecordWithTtl>)): void=} callback
 * @return {void}
 */
dns.resolve6 = function(hostname, callback_or_options, callback) {};

/**
 * @param {string} hostname
 * @param {!dns.ResolveWithTtlOptions|!dns.ResolveOptions=} options
 * @return {!Promise<!Array<string>>|!Promise<!Array<!dns.RecordWithTtl>>|!Promise<(!Array<string>|!Array<!dns.RecordWithTtl>)>}
 */
dns.resolve6.__promisify__ = function(hostname, options) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
dns.resolveCname = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<string>>}
 */
dns.resolveCname.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!dns.MxRecord>): void} callback
 * @return {void}
 */
dns.resolveMx = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<!dns.MxRecord>>}
 */
dns.resolveMx.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!dns.NaptrRecord>): void} callback
 * @return {void}
 */
dns.resolveNaptr = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<!dns.NaptrRecord>>}
 */
dns.resolveNaptr.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
dns.resolveNs = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<string>>}
 */
dns.resolveNs.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
dns.resolvePtr = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<string>>}
 */
dns.resolvePtr.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !dns.SoaRecord): void} callback
 * @return {void}
 */
dns.resolveSoa = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!dns.SoaRecord>}
 */
dns.resolveSoa.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!dns.SrvRecord>): void} callback
 * @return {void}
 */
dns.resolveSrv = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<!dns.SrvRecord>>}
 */
dns.resolveSrv.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<!Array<string>>): void} callback
 * @return {void}
 */
dns.resolveTxt = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<!Array<string>>>}
 */
dns.resolveTxt.__promisify__ = function(hostname) {};

/**
 * @param {string} hostname
 * @param {function(!NodeJS.ErrnoException, !Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>): void} callback
 * @return {void}
 */
dns.resolveAny = function(hostname, callback) {};

/**
 * @param {string} hostname
 * @return {!Promise<!Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>>}
 */
dns.resolveAny.__promisify__ = function(hostname) {};

/**
 * @param {string} ip
 * @param {function(!NodeJS.ErrnoException, !Array<string>): void} callback
 * @return {void}
 */
dns.reverse = function(ip, callback) {};

/**
 * @param {!Array<string>} servers
 * @return {void}
 */
dns.setServers = function(servers) {};

/**
 * @return {!Array<string>}
 */
dns.getServers = function() {};
/** @type {string} */
dns.NODATA;
/** @type {string} */
dns.FORMERR;
/** @type {string} */
dns.SERVFAIL;
/** @type {string} */
dns.NOTFOUND;
/** @type {string} */
dns.NOTIMP;
/** @type {string} */
dns.REFUSED;
/** @type {string} */
dns.BADQUERY;
/** @type {string} */
dns.BADNAME;
/** @type {string} */
dns.BADFAMILY;
/** @type {string} */
dns.BADRESP;
/** @type {string} */
dns.CONNREFUSED;
/** @type {string} */
dns.TIMEOUT;
/** @type {string} */
dns.EOF;
/** @type {string} */
dns.FILE;
/** @type {string} */
dns.NOMEM;
/** @type {string} */
dns.DESTRUCTION;
/** @type {string} */
dns.BADSTR;
/** @type {string} */
dns.BADFLAGS;
/** @type {string} */
dns.NONAME;
/** @type {string} */
dns.BADHINTS;
/** @type {string} */
dns.NOTINITIALIZED;
/** @type {string} */
dns.LOADIPHLPAPI;
/** @type {string} */
dns.ADDRGETNETWORKPARAMS;
/** @type {string} */
dns.CANCELLED;
/**
 * @constructor
 * @struct
 */
dns.Resolver = function() {};
/** @type {function(): !Array<string>} */
dns.Resolver.prototype.getServers;
/** @type {function(!Array<string>): void} */
dns.Resolver.prototype.setServers;
/** @type {?} */
dns.Resolver.prototype.resolve;
/** @type {?} */
dns.Resolver.prototype.resolve4;
/** @type {?} */
dns.Resolver.prototype.resolve6;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<(!dns.AnyARecord|!dns.AnyAaaaRecord|!dns.AnyCnameRecord|!dns.AnyMxRecord|!dns.AnyNaptrRecord|!dns.AnyNsRecord|!dns.AnyPtrRecord|!dns.AnySoaRecord|!dns.AnySrvRecord|!dns.AnyTxtRecord)>): void): void} */
dns.Resolver.prototype.resolveAny;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<string>): void): void} */
dns.Resolver.prototype.resolveCname;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<!dns.MxRecord>): void): void} */
dns.Resolver.prototype.resolveMx;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<!dns.NaptrRecord>): void): void} */
dns.Resolver.prototype.resolveNaptr;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<string>): void): void} */
dns.Resolver.prototype.resolveNs;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<string>): void): void} */
dns.Resolver.prototype.resolvePtr;
/** @type {function(string, function(!NodeJS.ErrnoException, !dns.SoaRecord): void): void} */
dns.Resolver.prototype.resolveSoa;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<!dns.SrvRecord>): void): void} */
dns.Resolver.prototype.resolveSrv;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<!Array<string>>): void): void} */
dns.Resolver.prototype.resolveTxt;
/** @type {function(string, function(!NodeJS.ErrnoException, !Array<string>): void): void} */
dns.Resolver.prototype.reverse;

/**
 * @return {void}
 */
dns.Resolver.prototype.cancel = function() {};
